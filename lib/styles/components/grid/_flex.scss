@use "../../variable/name" as n;

$grid-count: 12;
$grid-padding: 12px;
$justifies: (
  "center": center,
  "start": flex-start,
  "end": flex-end,
  "between": space-between,
  "around": space-around,
  "evenly": space-evenly,
);
$aligns: (
  "center": center,
  "start": flex-start,
  "end": flex-end,
  "baseline": baseline,
);

@function get-width($i) {
  $count: calc($grid-count / $i);
  @if $i > calc($grid-count / 2) {
    $count: 1;
  }
  $twopadding: calc($grid-padding * 2);
  $padding: calc($twopadding * $count);
  $container: calc(100% - $padding);
  $grid: calc($i / 12);
  $width: calc($grid * $container);

  @return $width;
}

@mixin android-breakpoint($i) {
  @media only screen and (min-width: 100px) and (max-width: 480px) {
    .col {
      overflow-wrap: break-word;
    }

    .col-sm-#{$i} {
      flex-basis: 100%;
    }
    .col-md-#{$i} {
      flex-basis: 100%;
    }
    .col-lg-#{$i} {
      flex-basis: 100%;
    }
  }
}

@mixin tablet-breakpoint($i) {
  @media only screen and (min-width: 480px) and (max-width: 780px) {
    .col-md-#{$i} {
      flex-basis: 100%;
    }
    .col-lg-#{$i} {
      flex-basis: 100%;
    }
  }
}

@mixin tablet-mini-laptop-breakpoint($i) {
  @media only screen and (min-width: 780px) and (max-width: 1080px) {
    .col-lg-#{$i} {
      flex-basis: 100%;
    }
  }
}

.#{n.$prefix}-row {
  display: flex;
  flex-wrap: wrap;

  // row justify
  @each $name, $value in $justifies {
    &.justify-#{$name} {
      justify-content: $value;
    }
  }

  // row align
  @each $name, $value in $aligns {
    &.align-#{$name} {
      .col {
        display: flex;
        flex-direction: column;
        justify-content: $value;
      }
    }
  }

  .#{n.$prefix}-col {
    flex: 1;
    padding: $grid-padding;
  }

  @for $i from 1 through $grid-count {
    $width: get-width($i);

    .col-#{$i} {
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: $width;
      max-width: $width;
    }

    @each $br in ("sm", "md", "lg") {
      .col-#{$br}-#{$i} {
        flex-grow: 0;
        flex-shrink: 0;
        flex-basis: $width;
        max-width: $width;
      }
    }

    @include android-breakpoint($i);
    @include tablet-breakpoint($i);
    @include tablet-mini-laptop-breakpoint($i);
  }

  &.fluid {
    margin: 0 auto;
    max-width: 90%;
  }

  &.no-wrap {
    flex-wrap: nowrap;
  }
}
